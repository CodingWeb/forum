$prototype-sizing-breakpoints: $global-prototype-breakpoints !default;

/// Map containing all the `sizing` classes
/// @type Map
$prototype-sizing: (
        width,
        height
) !default;

/// Map containing all the `sizing-px` classes
/// @type Map
$prototype-sizing-px: (
        height
) !default;

/// Map containing all the sizes.
/// @type Map
$prototype-sizes: (
        25: 25%,
        50: 50%,
        75: 75%,
        100: 100%
) !default;

/// Map containing all the sizes-px.
/// @type Map
$prototype-sizes-px: (
        25-px: 25px,
        50-px: 50px,
        75-px: 75px,
        100-px: 100px,
        125-px: 125px,
        150-px: 150px,
        200-px: 200px
) !default;


/// Max Width 100 utility.
@mixin max-width-100 {
   max-width: 100% !important;
}

/// Max Height 100 utility.
@mixin max-height-100 {
   max-height: 100% !important;
}


// Element Sizing
@each $sizing in $prototype-sizing {
   @each $length, $percentage in $prototype-sizes {
      .#{$sizing}-#{$length} {
         #{$sizing}: $percentage !important;
      }
   }
}

// Element Sizing
@each $sizing in $prototype-sizing-px {
   @each $length, $percentage in $prototype-sizes-px {
      .#{$sizing}-#{$length} {
         #{$sizing}: $percentage !important;
      }
   }
}

// Max width & height
.max-width-100 {
   @include max-width-100;
}
.max-height-100 {
   @include max-height-100;
}

@if ($prototype-sizing-breakpoints) {
   // Loop through Responsive Breakpoints
   @each $size in $breakpoint-classes {
      @include breakpoint($size) {
         @if $size != $-zf-zero-breakpoint {
            @each $sizing in $prototype-sizing {
               @each $length, $percentage in $prototype-sizes {
                  .#{$size}-#{$sizing}-#{$length} {
                     #{$sizing}: $percentage !important;
                  }
               }
            }
         }
      }
   }
}